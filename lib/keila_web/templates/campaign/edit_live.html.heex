<div x-data="{activeDialog: null}" x-init="Hooks.RememberUnsaved.mounted.call({el: $el})">
  <div class="container flex py-8 sm:py-11 sm:mb-4">
    <div class="flex-grow gap-4 flex flex-col-reverse sm:flex-row sm:items-center">
      <h1 class="text-2xl md:text-3xl text-gray-100">
        <%= gettext("Edit Campaign") %>
      </h1>
      <div class="flex-grow flex flex-row justify-end gap-4 sm:flex-row">
        <a
          class="button button--text button--large"
          href={Routes.campaign_path(@socket, :index, @current_project.id)}
          @click="setUnsavedReminder(false)"
        >
          <%= gettext("Cancel") %>
        </a>
        <%= delete_form_tag(
          @campaign,
          Routes.campaign_path(@socket, :delete, @current_project.id),
          as: :campaign
        ) %>
        <%= delete_button_tag(
          @campaign,
          [class: "button button--text button--large", "@click": "setUnsavedReminder(false)"],
          gettext("Delete")
        ) %>
        <button
          class="button button--large"
          type="submit"
          form="campaign"
          @click="setUnsavedReminder(false)"
        >
          <%= render_icon(:save) %>
          <%= gettext("Save") %>
        </button>
        <button
          class="button button--large"
          action="button"
          @click.prevent="$dispatch('x-show', { dialog: 'settings' })"
        >
          <%= render_icon(:cog) %>
          <%= gettext("Settings") %>
        </button>
        <button
          class={
            "button button--large #{if is_nil(get_field(@changeset, :scheduled_for)), do: "button--cta"}"
          }
          @click.prevent="$dispatch('x-show', { dialog: 'schedule' })"
        >
          <%= render_icon(:clock) %>
          <%= gettext("Schedule") %>
        </button>
        <button
          class={
            "button button--large #{if is_nil(get_field(@changeset, :scheduled_for)), do: "button--cta"}"
          }
          @click.prevent="$dispatch('x-show', { dialog: 'send' })"
        >
          <%= render_icon(:paper_airplane) %>
          <%= gettext("Send") %>
        </button>
      </div>
    </div>
  </div>

  <%= if @changeset.errors[:sender_id] do %>
    <div class="container mb-4">
      <div class="bg-red-500 text-white p-4">
        <%= gettext("You must specify a sender before sending/scheduling a campaign.") %>
        <button
          class="button button--text underline"
          @click.prevent="$dispatch('x-show', { dialog: 'settings' })"
        >
          <%= gettext("Settings") %>
        </button>
      </div>
    </div>
  <% end %>
  <%= if @changeset.errors[:scheduled_for] do %>
    <div class="container mb-4">
      <div class="bg-red-500 text-white p-4">
        <%= with_errors(@changeset, :scheduled_for) do
          [gettext("There was an error scheduling your campaign:")]
        end %>
      </div>
    </div>
  <% end %>

  <div class="container pb-8">
    <.form
      let={f}
      for={@changeset}
      id="campaign"
      class="flex flex-col gap-4"
      phx-change="update"
      phx-submit="save"
      x-on:change="setUnsavedReminder(true)"
    >
      <div class="flex flex-row items-center gap-2">
        <%= with_validation(f, :subject) do %>
          <%= text_input(f, :subject,
            placeholder: gettext("Your Campaign Subject"),
            class: "text-black flex-grow"
          ) %>
        <% end %>
      </div>

      <div class="flex flex-col">
        <div x-data="{previewMode: false}">
          <% type = Ecto.Changeset.get_field(@changeset, :settings).type %>
          <% enable_wysiwyg? = Ecto.Changeset.get_field(@changeset, :settings).enable_wysiwyg %>
          <%= cond do %>
            <% (type == :markdown && enable_wysiwyg?) -> %>
              <%= textarea(f, :text_body, class: "hidden") %>
              <div
                id="wysiwyg-container"
                phx-hook="MarkdownEditor"
                class="flex-grow bg-white mt-4 min-h-10"
              >
                <%= render("_wysiwyg_editor.html", assigns) %>
              </div>
            <% (type == :block) -> %>
              <%= render("_block_editor.html", assigns) %>
            <% (type == :mjml) -> %>
              <div id="mjml-container" phx-hook="MjmlEditor">
                <%= render("_mjml_editor.html", assigns) %>
              </div>
            <% true -> %>
              <div id="markdown-simple-container" phx-hook="MarkdownSimpleEditor">
                <%= render("_markdown_editor.html", assigns) %>
              </div>
          <% end %>
        </div>
      </div>
    </.form>
  </div>
  <%= render("_send_dialogs.html", assigns) %>
  <%= render("_settings_dialog.html", assigns) %>
</div>

<%= render("_wysiwyg_dialogs.html", assigns) %>
